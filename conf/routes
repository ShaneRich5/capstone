# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing how to use dependency injection
# GET     /count                      controllers.CountController.count
# An example controller showing how to write asynchronous code
# GET     /message                    controllers.AsyncController.message


# Root page
GET     /                           controllers.Assets.at(path="/public", file="base.html")

#GET     /                           controllers.PagesCtrl.base

# Angular partials
GET     /paritals/*file             controllers.Assets.at(path="/public/partials/", file)
GET     /bower_components/*file     controllers.Assets.at(path="/public/bower_components/", file)
GET     /app/*file                  controllers.Assets.at(path="/public/app/", file)

# Home pages
GET		/home 						controllers.PagesCtrl.home
GET		/about						controllers.PagesCtrl.about
GET		/contact					controllers.PagesCtrl.contact

# Session pages
GET		/login						controllers.SessionsCtrl.login
GET		/register					controllers.SessionsCtrl.register
POST    /login                      controllers.SessionsCtrl.authenticate
POST    /register                   controllers.SessionsCtrl.store
GET     /logout                     controllers.SessionsCtrl.logout

# User pages
GET		/users                      controllers.UsersCtrl.all(role ?= null)
GET		/users/$id<[0-9]>           controllers.UsersCtrl.show(id: Long)
POST	/users                      controllers.UsersCtrl.store

# Course pages
GET     /courses                    controllers.CoursesCtrl.all
GET     /courses/create             controllers.CoursesCtrl.create
POST    /courses                    controllers.CoursesCtrl.store
GET     /courses/edit               controllers.CoursesCtrl.edit
PUT     /courses                    controllers.CoursesCtrl.update
GET     /courses/:code              controllers.CoursesCtrl.show(code: String)
GET     /courses/assign/:code       controllers.CoursesCtrl.assign(code: String)
POST     /courses/assign/           controllers.CoursesCtrl.saveAssign

#lecturers for admin
GET     /lecturers                    controllers.LecturersController.all
GET     /lecturers/create             controllers.LecturersController.create
POST    /lecturers                    controllers.LecturersController.store
GET     /lecturers/edit               controllers.LecturersController.edit
PUT     /lecturers                    controllers.LecturersController.update
GET     /lecturers/:id              controllers.LecturersController.show(id: String)

# Assignment pages
GET     /courses/:name/assignments          controllers.AssignmentsCtrl.all(name)
GET     /courses/:name/assignments/create   controllers.AssignmentsCtrl.create(name)
POST    /courses/:name/assignments          controllers.AssignmentsCtrl.store(name)
GET     /courses/:name/assignments/edit     controllers.AssignmentsCtrl.edit(name)
PUT     /courses/:name/assignments          controllers.AssignmentsCtrl.update(name)
GET     /courses/:name/assignments/:id      controllers.AssignmentsCtrl.show(name, id: Long)

# Submission pages
GET     /courses/:name/assignments/:courseId/submissions            controllers.SubmissionsCtrl.all(name, courseId: Long)
GET     /courses/:name/assignments/:courseId/submissions/create     controllers.SubmissionsCtrl.create(name, courseId: Long)
POST    /courses/:name/assignments/:courseId/submissions            controllers.SubmissionsCtrl.store(name, courseId: Long)
GET     /courses/:name/assignments/:courseId/submissions/edit       controllers.SubmissionsCtrl.edit(name, courseId: Long)
PUT     /courses/:name/assignments/:courseId/submissions            controllers.SubmissionsCtrl.update(name, courseId: Long)
GET     /courses/:name/assignments/:courseId/submissions/:id        controllers.SubmissionsCtrl.show(name, courseId: Long, id: Long)

#Testcase pages
GET		/Testcase                  controllers.TestController.show
POST 	/Testcase                  controllers.TestController.addtest
GET     /upload                    controllers.TestController.upload
POST    /upload                    controllers.TestController.addFiles
POST    /upload/result             controllers.TestController.result

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
